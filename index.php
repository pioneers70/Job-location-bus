<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Маршруты Красноярск-Кызыл</title>
</head>
<link rel="stylesheet" href="mapstyle.css">

<script src="mapscript.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"
></script>

<script>


    $(document).ready(function () {

        /** Координаты остановок и сами остановки ------------------------------------------------------------------ */

        let pointsStation = [];
        let track = [];
        let busposition = []
        Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-primary',
                cancelButton: 'btn btn-outline-danger'
            },
            buttonsStyling: false
        }).fire({
            html: '<div class="loading-wave">' +
                '<div class="loading-bar"></div>' +
                '<div class="loading-bar"></div>' +
                '<div class="loading-bar"></div>' +
                '<div class="loading-bar"></div>' +
                '</div>',
            title: 'Пожалуйста, ожидайте, выполняется загрузка данных о рейсе',
            text: 'Пожалуйста, ожидайте, выполняется загрузка данных о рейсе',
            showConfirmButton: false,
            allowOutsideClick: false,
            onBeforeOpen: () => {
                Swal.showLoading();
            }
        });
        fetch('getdata.php')
            .then(async response => await response.json())
            .then(async data => {
                Swal.close();
                console.log(data);
                data.datapoint.forEach(point => {
                    let newPoint = {
                        id: point.idstation,
                        name: point.stationName,
                        timearr: point.timearrft,
                        timesend: point.timesendft,
                        cords: [point.longitude, point.latitude]
                    };
                    pointsStation.push(newPoint);
                });
                data.pointtrip.forEach(pointtr => {
                    let trackpoint = {
                        points: [pointtr.longtrip, pointtr.latitrip]
                    };
                    track.push(trackpoint);
                });
                data.busposition.forEach(geobus => {
                    let buscoord = {
                        cords: [geobus.buslongitude, geobus.buslatitude]
                    };
                    busposition.push(buscoord);
                });
                while (true) {
                    if (pointsStation.length > 0) {
                        console.log('Массив pointsStation заполнен', pointsStation, track);
                        break;
                    } else {
                        console.log('Массив пуст. ожидайте..')
                    }
                    await new Promise(resolve => setTimeout(resolve, 5000));
                }

                function copyCord(vP, startP, endP) {
                    let res = [];
                    let j = 0;
                    for (let i = startP; i < endP; i++) {
                        res[j] = ol.proj.transform(vP[i], 'EPSG:4326', 'EPSG:3857');
                        j++;
                    }
                    return res;
                }

                /** Точки прохождения всего маршрута и отрисовка его -------------------------------------------------*/

                var vectorSource = new ol.source.Vector();
                var routePoints = [];
                track.forEach(point => {
                    routePoints.push(ol.proj.fromLonLat(point.points));
                });
                var routeLine = new ol.geom.LineString(routePoints);
                var routeFeature = new ol.Feature({
                    geometry: routeLine
                });
                routeFeature.setStyle(new ol.style.Style({
                    fill: new ol.style.Fill({color: '#6A5ACD', weight: 1}),
                    stroke: new ol.style.Stroke({color: '#6A5ACD', width: 3})
                }));
                vectorSource.addFeature(routeFeature);

                /** уже пройденный путь-------------------------------------------------------------------------------*/

                /*var distance = new ol.source.Vector();
                var points = [
                    [92.9072466662403, 56.0334183196615],
                    [92.9072466662403, 56.0334183196615],
                    [92.907369964036, 56.0332233146842],
                    [92.9072849715378, 56.0332099874581],
                    [92.9072849715378, 56.0332099874581],
                    [92.9072849715378, 56.0332099874581],
                    [92.9071733245876, 56.0332266464907],
                    [92.9071399646129, 56.0332199828777],
                    [92.9069366615515, 56.0332216592583],
                    [92.9055016378186, 56.0333333271633],
                    [92.9053433036677, 56.0333749852221],
                    [92.9052683275438, 56.0334549904879],
                    [92.9052982928477, 56.0335566629734],
                    [92.9053132964543, 56.033684989911],
                    [92.9052349675692, 56.0337666506026],
                    [92.9050499789661, 56.0338116614227],
                    [92.9042066337783, 56.0338233332228],
                    [92.9024949653313, 56.0338299968359],
                    [92.9023133294895, 56.0338483322491],
                    [92.9022916622698, 56.0338416476813],
                    [92.9022916622698, 56.0338416476813],
                    [92.9022633314371, 56.0338416476813],
                    [92.9022416642174, 56.0338383158748],
                    [92.9019599903612, 56.0338149932292],
                    [92.8938316397587, 56.033809985042],
                    [92.8916049871807, 56.0338049978097],
                    [92.8913632950027, 56.0337533233766],
                    [92.8911849700127, 56.0336666544978],
                    [92.8910716466818, 56.0335533311669],
                    [92.8902016470419, 56.0315866642705],
                    [92.8892782965883, 56.0294116651708],
                    [92.889114975205, 56.0289783207767],
                    [92.8858249943903, 56.0247783167345],
                    [92.8851266561274, 56.0237116566914],
                    [92.8850749816944, 56.0234883208814],
                    [92.885058301707, 56.0231349817531],
                    [92.8849749855895, 56.0209849816796],
                    [92.8848866403301, 56.0207483186435],
                    [92.8847466625471, 56.0205533136662],
                    [92.884498306756, 56.0203083315911],
                    [92.8842549801069, 56.0201766518923],
                    [92.8835366510049, 56.0199649878824],
                    [92.8831149993658, 56.0198866589972],
                    [92.8828999616399, 56.0198683235841],
                    [92.8786233050932, 56.0196266523608],
                    [92.8781166609559, 56.0196266523608],
                    [92.8776333185094, 56.0196966622071],
                    [92.8714083304795, 56.0207233196173],
                    [92.8699549922882, 56.0208099884961],
                    [92.8682033002535, 56.0208416511353],
                    [92.8631733201591, 56.020869981968],
                    [92.862943320736, 56.0208533229355],
                    [92.8624816455092, 56.0207849894699],
                    [92.8620266338955, 56.020671666139],
                    [92.8611183289581, 56.0203733332503],
                    [92.8598416393762, 56.019966664263],
                    [92.8596099635725, 56.0199183216365],
                    [92.859361649691, 56.0198966544168],
                    [92.8590883158285, 56.0198816508101],
                    [92.8583582939716, 56.0198949989909],
                    [92.8575783159718, 56.0199266616301],
                    [92.8567583143843, 56.0200033141347],
                    [92.8551116475964, 56.0202399981255],
                    [92.8537266638255, 56.0205233274075],
                    [92.8503599885968, 56.0213933270474],
                    [92.8497983172652, 56.0215849792635],
                    [92.8489733284453, 56.0219183275527],
                    [92.8484799696245, 56.0221716496214],
                    [92.8475933319068, 56.0227216491529],
                    [92.8464299656559, 56.0234949844944],
                    [92.8451766615839, 56.0241266656723],
                    [92.8408733086756, 56.0261249952079],
                    [92.8384799819529, 56.0275616534118],
                    [92.8379266506149, 56.0279733305862],
                    [92.8375683242543, 56.0283616641602],
                    [92.8373216448439, 56.0287016551077],
                    [92.836623306581, 56.0297966459835],
                    [92.8364283016036, 56.0304233189743],
                    [92.8347299603826, 56.0349133159115],
                    [92.8346449678844, 56.0352133251809],
                    [92.8346699878654, 56.0353866629385],
                    [92.8348399728618, 56.035733317499],
                    [92.8347833111963, 56.0358483172105],
                    [92.8346249770454, 56.035949989696],
                    [92.8344849992624, 56.0360716530206],
                    [92.8344033176159, 56.0362166599455],
                    [92.8344066284677, 56.0363833131353],
                    [92.8345416609278, 56.0366716506045],
                    [92.8376066295518, 56.040863314653],
                    [92.8378383053555, 56.0413066544666],
                    [92.8378649598076, 56.0414533168174],
                    [92.8378949670209, 56.0417449860931],
                    [92.8378633253365, 56.0420366553688],
                    [92.8356599744492, 56.0466649956179],
                    [92.8354566294782, 56.0470699882244],
                    [92.8353083117016, 56.04761833233],
                    [92.8352332936682, 56.0485633290486],
                    [92.8348333092487, 56.0531949801494],
                    [92.8345483245409, 56.0555649842265],
                    [92.8340816620817, 56.0601366628101],
                    [92.8341216437598, 56.0602816487803],
                    [92.8341816581865, 56.0604249793246],
                    [92.8342699615365, 56.0605633226364],
                    [92.8345133300951, 56.0608233292729],
                    [92.8348232928745, 56.0610699877285],
                    [92.835708296121, 56.0616283272537],
                    [92.836038291649, 56.0617733132238],
                    [92.8362149821679, 56.061829995844],
                    [92.8363966599192, 56.0618699984769],
                    [92.8365749849092, 56.061889989316],
                    [92.8367582971316, 56.0618933211225],
                    [92.8369499912572, 56.0618766620899],
                    [92.8371366562408, 56.0618416466894],
                    [92.8373066412372, 56.061791648637],
                    [92.8374399973167, 56.0617199833649],
                    [92.8375482915057, 56.0616316590602],
                    [92.8376399895264, 56.0615366501877],
                    [92.8377099784179, 56.0614316458957],
                    [92.8377533128573, 56.0613183225648],
                    [92.8377699928446, 56.0611999910467],
                    [92.837761652851, 56.0610833149546],
                    [92.8377183184115, 56.0609733234302],
                    [92.8376466531394, 56.0608666637123],
                    [92.8375466570346, 56.0607699994139],
                    [92.8374199645681, 56.060684985961],
                    [92.8372749995527, 56.0606099888823],
                    [92.8371199762535, 56.0605349918037],
                    [92.8369283240374, 56.0604849937513],
                    [92.8367366299119, 56.060453331112],
                    [92.8365333268504, 56.0604333193182],
                    [92.8363449854861, 56.0604333193182],
                    [92.8361516568894, 56.0604466465443],
                    [92.8359749663705, 56.0604766537576],
                    [92.8358082922259, 56.060519988197],
                    [92.8356483236038, 56.0605783262431],
                    [92.8348249692551, 56.0610849913352],
                    [92.8294349864194, 56.0643899967113],
                    [92.8237966477926, 56.0677849818179],
                    [92.8184616502417, 56.0709433248432],
                    [92.8172983259003, 56.0714766653421],
                    [92.8160449799188, 56.0719533232208],
                    [92.8147332958911, 56.0723683322017],
                    [92.8130166402117, 56.0728216464801],
                    [92.8116399964345, 56.0730966567232],
                    [92.8038666613409, 56.0744049879896],
                    [92.7961349843061, 56.0756849884232],
                    [92.7883966436583, 56.0769849796959],
                    [92.7806483285457, 56.0782566610906],
                    [92.7729616623309, 56.0797066465206],
                    [92.7653616649949, 56.0813583214957],
                    [92.7637333126654, 56.0817566504892],
                    [92.7624366322445, 56.0821816548896],
                    [92.7615183109328, 56.0825816602638],
                    [92.7606466349123, 56.0830399827294],
                    [92.7598332969378, 56.0835383287825],
                    [92.7591233078295, 56.0840699929008],
                    [92.7584816312321, 56.0846483232651],
                    [92.757939992649, 56.0852433126618],
                    [92.7574766410416, 56.0858766492656],
                    [92.7553983062402, 56.0891316565893],
                    [92.7543516579909, 56.0902499910654],
                    [92.7537149686259, 56.0907899951774],
                    [92.7527399856487, 56.0914683216464],
                    [92.7516399865857, 56.0920866546435],
                    [92.7501316631097, 56.0927849929064],
                    [92.7491549618424, 56.0931616546803],
                    [92.7477999852849, 56.0935849827001],
                    [92.7454049821816, 56.094184980284],
                    [92.7424599585921, 56.0948616513272],
                    [92.7412999870119, 56.0952333258687],
                    [92.7402666659887, 56.0956416502818],
                    [92.7392349794366, 56.0961216609218],
                    [92.7382133092587, 56.0966933276729],
                    [92.7359849803001, 56.0980799878244],
                    [92.7348733303917, 56.0989349838577],
                    [92.7339316654797, 56.0998266507173],
                    [92.7332949761146, 56.1005949988264],
                    [92.7326049778454, 56.1016433234563],
                    [92.7321033209404, 56.1026866608538],
                    [92.7318399615427, 56.1035316614675],
                    [92.7317333018248, 56.1046016533171],
                    [92.7317599981864, 56.105464989344],
                    [92.7319499740219, 56.1065099821674],
                    [92.732224984265, 56.1073449873615],
                    [92.7327682992287, 56.108336650326],
                    [92.7353449800833, 56.1122949831449],
                    [92.7360149875134, 56.1141133322646],
                    [92.7372716443467, 56.1187366643266],
                    [92.7374132985103, 56.1201916579437],
                    [92.7372649807337, 56.1226316509123],
                    [92.7367916546615, 56.1271283324173],
                    [92.7362966613696, 56.1316849864395],
                    [92.7357983153164, 56.1362616522555],
                    [92.7353183256312, 56.1408649934784],
                    [92.7348166268167, 56.1450683293271],
                    [92.7344549896043, 56.1461149985311],
                    [92.7337983094002, 56.1473933225841],
                    [92.7311833232481, 56.1517633325774],
                    [92.7285433171151, 56.1559833274586],
                    [92.7280016366225, 56.1564999879702],
                    [92.7267549961635, 56.1574883191282],
                    [92.7260582923717, 56.1579583133939],
                    [92.7253032924433, 56.1583849941749],
                    [92.7244332928035, 56.1587716513683],
                    [92.7235316514791, 56.1591199823094],
                    [92.722919982095, 56.1593133318609],
                    [92.721304998901, 56.1597366598807],
                    [92.7199583204277, 56.1599799865298],
                    [92.7185699838955, 56.1601416524873],
                    [92.7153699828115, 56.1603699964845],
                    [92.7139149682396, 56.1603966509365],
                    [92.7113316656815, 56.1602966548317],
                    [92.7030349645538, 56.1598616550117],
                    [92.6949633175263, 56.1594083197786],
                    [92.6904516324146, 56.1592816482669],
                    [92.6871249807736, 56.1593349990806],
                    [92.6848799718276, 56.1595016522704],
                    [92.6830216619845, 56.1597233326546],
                    [92.6805632916932, 56.1601383206807],
                    [92.6785466476992, 56.1605849923009],
                    [92.67118498978, 56.1627149805805],
                    [92.6638933207523, 56.1648416580085],
                    [92.6566233189443, 56.1669333200359],
                    [92.6494466496281, 56.1689866558111],
                    [92.6419883064558, 56.1711533149172],
                    [92.6346583321306, 56.1732949959518],
                    [92.6333249808832, 56.1737516629914],
                    [92.6331016450732, 56.1738533145222],
                    [92.6328733220307, 56.173978330608],
                    [92.6326833042858, 56.1741033257391],
                    [92.6325249701348, 56.1742283208701],
                    [92.6323783287388, 56.1743683196079],
                    [92.6322499598917, 56.1745049865391],
                    [92.6320666476693, 56.1747999876213],
                    [92.6317416393738, 56.1753199799395],
                    [92.6316182996686, 56.1754233288056],
                    [92.6314933254922, 56.175526656717],
                    [92.6313333149607, 56.1755916583761],
                    [92.6311683171967, 56.1756349928155],
                    [92.6309666486063, 56.1756666554547],
                    [92.6307633036354, 56.1756733190677],
                    [92.6305633114256, 56.1756566600352],
                    [92.6303849864356, 56.1756233210153],
                    [92.6302199886716, 56.1755616511627],
                    [92.630033323688, 56.1754999813101],
                    [92.6299083076021, 56.1754149888119],
                    [92.6296599937206, 56.1752083329892],
                    [92.6277233130829, 56.1732466533252],
                    [92.6272999850631, 56.1729599922367],
                    [92.6268399862169, 56.1727066492133],
                    [92.6263349765507, 56.1724783261708],
                    [92.6255316549506, 56.1722066477342],
                    [92.6245766628125, 56.1719549810914],
                    [92.6223132974986, 56.1713783271078],
                    [92.6214366342457, 56.1710949978258],
                    [92.6209249609664, 56.1708649984027],
                    [92.6202016446321, 56.1704866602482],
                    [92.6166883280074, 56.168368322814],
                    [92.6161966455672, 56.1681399997715],
                    [92.6156566414553, 56.1679483266007],
                    [92.6150849956589, 56.1677749888431],
                    [92.6138699968843, 56.1674933149869],
                    [92.6122799917618, 56.1672383165376],
                    [92.6102166605671, 56.1669999980757],
                    [92.6045949600182, 56.1664866484158],
                    [92.6019933010922, 56.1660183305307],
                    [92.5944899890093, 56.1643149811226],
                    [92.5867833319555, 56.1625466510101],
                    [92.5792482943691, 56.1608533179762],
                    [92.5760699605048, 56.1602066541464],
                    [92.5749666505901, 56.1600449881889],
                    [92.5741949706744, 56.1599716465361],
                    [92.5726433127589, 56.1599283330515],
                    [92.5706982921275, 56.1599566638842],
                    [92.5691483105927, 56.1600533281826],
                    [92.5680283206906, 56.1601866633073],
                    [92.5666099769451, 56.1604383299501],
                    [92.5645999965641, 56.160926659629],
                    [92.5573583255888, 56.1630466524891],
                    [92.5499749585404, 56.1652416633827],
                    [92.542514980897, 56.167439985128],
                    [92.5353966496269, 56.1695649861753],
                    [92.5290249782915, 56.1714083133664],
                    [92.5216066587068, 56.1731766644337],
                    [92.5138666416784, 56.1749833207985],
                    [92.5061166501851, 56.1768333325574],
                    [92.4985966581149, 56.1785966544828],
                    [92.4909733171787, 56.1804749970745],
                    [92.4835083103933, 56.1822516462259],
                    [92.4833499762424, 56.1823433232918],
                    [92.4832216493048, 56.1824116567574],
                    [92.4830733315281, 56.18242831579],
                    [92.4828983173899, 56.1823566505179],
                    [92.4828016321368, 56.1822533226065],
                    [92.4823616660392, 56.1816333132288],
                    [92.4823966604849, 56.181538325311],
                    [92.4825083074352, 56.1814483246257],
                    [92.4826683179668, 56.1813683193599],
                    [92.4828716629378, 56.1813033177008],
                    [92.4848833196994, 56.1807516627435],
                    [92.4850716610637, 56.1808299916286],
                    [92.4851816316334, 56.1809899812054],
                    [92.4854233238114, 56.1813399885272],
                    [92.4855416343747, 56.1814049901863],
                    [92.4857399921133, 56.1813966501927],
                    [92.4858699954315, 56.1813599793663],
                    [92.4860299640535, 56.1813049940815],
                    [92.4867416295425, 56.1811099891041],
                    [92.4867416295425, 56.1811099891041],
                    [92.4880383099634, 56.1808716496874],
                    [92.4882499949281, 56.1808966487136],
                    [92.4886349757408, 56.1809616503727],
                    [92.4886349757408, 56.1810649992388],
                    [92.4884566507508, 56.1811249927108],
                    [92.4834549595796, 56.1823033206589],
                    [92.4833416362487, 56.1823983295314],
                    [92.4833083181836, 56.1825099974364],
                    [92.4833499762424, 56.1826133253478],
                    [92.4858249846114, 56.1858799835168],
                    [92.4858282954632, 56.1860683248812],
                    [92.485768322946, 56.1862399862581],
                    [92.4856216396404, 56.1863899804154],
                    [92.4853949929786, 56.1865399955275],
                    [92.4850016302627, 56.1867349795501],
                    [92.4847116583224, 56.1868183166224],
                    [92.482791657672, 56.1872549928229],
                    [92.4752266547818, 56.1890816609815],
                    [92.472736642806, 56.1896883221785],
                    [92.4724799889309, 56.1897849864768],
                    [92.4722633167338, 56.1899066498014],
                    [92.4718616559338, 56.1901516528312],
                    [92.4715482984836, 56.1904449984875],
                    [92.4714299879203, 56.1905933162641],
                    [92.4713099590669, 56.1907483186086],
                    [92.4711116432378, 56.191081645943],
                    [92.4710416543463, 56.1912566600813],
                    [92.4710016307586, 56.1915966510287],
                    [92.4710433307269, 56.1919649937637],
                    [92.4711183068508, 56.1921266597212],
                    [92.4713066482151, 56.1924483152554],
                    [92.4718033178877, 56.1930799964334],
                    [92.4751766567294, 56.197336662141],
                    [92.4783133325349, 56.2014966635503],
                    [92.4784283322465, 56.2015766478613],
                    [92.4785616464164, 56.2016733331144],
                    [92.4785316392031, 56.2017683210321],
                    [92.4784133286398, 56.2018516581044],
                    [92.4724182981235, 56.2050049929426],
                    [92.4685533187512, 56.2069549798516],
                    [92.4673533235833, 56.2074116468912],
                    [92.4651283054764, 56.2081666468196],
                    [92.457636644239, 56.210238318008],
                    [92.4506116454607, 56.2127533290099],
                    [92.4485683051051, 56.2134199836788],
                    [92.4410449602737, 56.2151566511521],
                    [92.4376349925151, 56.2158883284349],
                    [92.4370182939891, 56.2159816609267],
                    [92.4288133327916, 56.2166599873958],
                    [92.4205249716576, 56.2172299987211],
                    [92.4165799870194, 56.2174366545438],
                    [92.4083849583772, 56.2174166637048],
                    [92.400311634969, 56.2179799904623],
                    [92.3988799639975, 56.2179799904623],
                    [92.3962549614711, 56.2178383153439],
                    [92.3943216335947, 56.2176483185537],
                    [92.3898666520579, 56.2171183308161],
                    [92.3815249820197, 56.2165666549039],
                    [92.3734682966893, 56.2158166631627],
                    [92.3654983221473, 56.2148933127091],
                    [92.357518331231, 56.2139816550105],
                    [92.3549133195437, 56.2136249840757],
                    [92.3534583049718, 56.2132966649284],
                    [92.3520466248393, 56.2128899959412],
                    [92.350738293573, 56.2124283207144],
                    [92.3495483147794, 56.2119066520156],
                    [92.3463333100887, 56.2102199825948],
                    [92.3433333012143, 56.2086933237055],
                    [92.3415199602818, 56.2079383237772],
                    [92.3398933262424, 56.2073816606326],
                    [92.3378766403389, 56.2068099938815],
                    [92.3364649602064, 56.2065066528056],
                    [92.3287916631272, 56.205061654608],
                    [92.3211599821973, 56.2035883255777],
                    [92.3179366375129, 56.2030366496656],
                    [92.3167666495584, 56.2029233263347],
                    [92.3156583105018, 56.2028849791276],
                    [92.3145349678384, 56.2028983273085],
                    [92.3137699934453, 56.2029299899477],
                    [92.3123649769259, 56.203118331312],
                    [92.310394978223, 56.2034666622531],
                    [92.302616655897, 56.2049766621098],
                    [92.2949283133016, 56.2065116609928],
                    [92.2870082949025, 56.2080616634824],
                    [92.279108309252, 56.2095816587586],
                    [92.2711599600201, 56.2111316612482],
                    [92.2634916501733, 56.21267497917],
                    [92.2557416586801, 56.214194995401],
                    [92.2480616560783, 56.2157399897035],
                    [92.2403949807026, 56.217276664967],
                    [92.2326533292031, 56.2188283228825],
                    [92.2247166308166, 56.2203683299526],
                    [92.2169633284716, 56.2217233274648],
                    [92.2091649733971, 56.2230699849834],
                    [92.2013449930123, 56.2244216506892],
                    [92.1934582926783, 56.2258466580477],
                    [92.1856583031327, 56.227208319173],
                    [92.1839399710726, 56.2276299917669],
                    [92.1765433187076, 56.2296633157483],
                    [92.1694782963417, 56.2315283311139],
                    [92.1617449848358, 56.2330733254163],
                    [92.1539833005876, 56.2346033161121],
                    [92.1511833258325, 56.2350516641128],
                    [92.1486816630114, 56.2353283297818],
                    [92.1463833032517, 56.2354049822864],
                    [92.1382683217847, 56.2355816518505],
                    [92.1344699785426, 56.2357016597492],
                    [92.1330549875584, 56.2358666575132],
                    [92.1258216565768, 56.2367383125789],
                    [92.1242683222807, 56.2368016588122],
                    [92.1189149683618, 56.2367999824315],
                    [92.1177649712464, 56.2367266617335],
                    [92.1170183113117, 56.2366233128674],
                    [92.1155866403402, 56.2363233245528],
                    [92.1131599955524, 56.2357166633559],
                    [92.1058499701568, 56.2335599996693],
                    [92.0984016433587, 56.2313716523888],
                    [92.0910366326782, 56.2291449998108],
                    [92.0837466400312, 56.2269599843367],
                    [92.0762999896138, 56.2248216560634],
                    [92.068791648389, 56.2231499902492],
                    [92.0612216582664, 56.2214749926286],
                    [92.0536783225959, 56.2197483205748]]
                p = [];
                p = copyCord(points, 0, (points.length));
                feature = new ol.Feature({
                    geometry: new ol.geom.LineString(p)
                });

                feature.setStyle(new ol.style.Style({
                        fill: new ol.style.Fill({color: '#FF4500', weight: 1}),
                        stroke: new ol.style.Stroke({color: '#FF4500', width: 4})
                    })
                );
                distance.addFeature(feature);*/

                let iconFeatures = [];
                let labelFeatures = [];
                let iconSource, labelSource;
                let busFeatures = [];
                let iconBusSource;

                let posbus = [{name: '619 Красноярск - Кызыл', cords: [92.0536783225959, 56.2197483205748]}];
                let busCoords = posbus[0].cords;

                /** Отрисовка позиции автобуса ---------------------------------------------------------------------- */

                function addMarkerBus() {
                    for (let j = 0; j < busposition.length; j++) {
                        let busFeature = new ol.Feature({
                            geometry: new ol.geom.Point(ol.proj.transform(busposition[j].cords, 'EPSG:4326', 'EPSG:3857')),
                            name: busposition[j].name,
                            id: 'bus' + busposition[j].id

                        });
                        let busStyle = new ol.style.Style({
                            image: new ol.style.Icon({
                                scale: 0.5,
                                opacity: 0.9,
                                src: "https://cdn1.ozonusercontent.com/s3/marketing-api/banners/em/ew/c96/emewn0ujuN78mxqrY0ihpjaY6RjKqA0N.png"
                            })
                        });
                        busFeature.setStyle([busStyle]);
                        busFeatures.push(busFeature);

                    }
                    iconBusSource = new ol.source.Vector({features: busFeatures});
                }


                /** отрисовка иконки остановки -----------------------------------------------------------------------*/
                let timestop;

                function addMarkerStations() {
                    for (var j = 0; j < pointsStation.length; j++) {
                        var iconFeature = new ol.Feature({
                            geometry: new ol.geom.Point(ol.proj.transform(pointsStation[j].cords, 'EPSG:4326', 'EPSG:3857')),
                            name: pointsStation[j].name,
                            timearr: pointsStation[j].timearr,
                            timesend: pointsStation[j].timesend,
                            id: 'station-' + pointsStation[j].id
                        });
                        let iconStyle;
                        if (pointsStation[j].timesend && pointsStation[j].timearr) { //если станцию посещал
                            iconStyle = new ol.style.Style({
                                image: new ol.style.Icon({
                                    scale: 0.28,
                                    opacity: 0.9,
                                    src: "https://upload.wikimedia.org/wikipedia/commons/9/97/GO_bus_symbol.svg"
                                })
                            });
                        } else {
                            iconStyle = new ol.style.Style({ //если не останавливался
                                image: new ol.style.Icon({
                                    scale: 0.28,
                                    opacity: 0.8,
                                    src: "https://school.stnorbert.org/wp-content/uploads/2018/01/bus-stop-filled-100.png"
                                })
                            });
                        }

                        iconFeature.setStyle([iconStyle]);
                        iconFeatures.push(iconFeature);
                    }
                    iconSource = new ol.source.Vector({features: iconFeatures});
                }

                /** Добавление названия ----------------------------------------------------------------------------- */

                function addLabelStations() {
                    for (let j = 0; j < pointsStation.length; j++) {
                        let labelFeature = new ol.Feature({
                            geometry: new ol.geom.Point(ol.proj.transform(pointsStation[j].cords, 'EPSG:4326', 'EPSG:3857')),
                            name: pointsStation[j].name,
                            timearr: pointsStation[j].timearr,
                            timesend: pointsStation[j].timesend,
                            id: 'station-' + pointsStation[j].id
                        });
                        let labelStyle = new ol.style.Style({
                            text: new ol.style.Text({
                                font: '12px Arial',
                                text: pointsStation[j].name,
                                overflow: true,
                                fill: new ol.style.Fill({
                                    color: '#000'
                                }),
                                stroke: new ol.style.Stroke({
                                    color: '#000',
                                    width: 0.5
                                }),
                                textBaseline: 'bottom',
                                textAlign: 'top',
                                rotation: 0,
                                offsetY: -8
                            })
                        });
                        labelFeature.setStyle([labelStyle]);
                        labelFeatures.push(labelFeature);
                    }
                    labelSource = new ol.source.Vector({
                        features: labelFeatures
                    });
                }

                addMarkerBus();
                addLabelStations();
                addMarkerStations();

                let clusterSource = new ol.source.Cluster({
                    /**
                     радиус, после которого близко находящиеся объекты
                     объединяются и считаются
                     */
                    distance: 40,
                    /**
                     * Координаты самих объектов
                     */
                    source: labelSource,
                });
                let styleCache = {};

                /** Создаем слой Кластер и задаем для него стили------------------------------------------------------*/

                let clusters = new ol.layer.Vector({
                    source: clusterSource,
                    style: function (feature, resolution) {
                        let size = feature.get('features').length;
                        let style = styleCache[size];
                        if (!style && size >= 2) {
                            style = [new ol.style.Style({
                                image: new ol.style.Circle({
                                    radius: 20,
                                    stroke: new ol.style.Stroke({
                                        color: '#fff'
                                    }),
                                    fill: new ol.style.Fill({
                                        color: '#3399CC',
                                        // color: '#ff0000'
                                    })
                                }),
                                text: new ol.style.Text({
                                    // text: listSt,
                                    text: size.toString(),
                                    fill: new ol.style.Fill({
                                        color: '#fff'
                                    }),
                                    scale: 2
                                })
                            })];
                            styleCache[size] = style;
                        }
                        return style;
                    }
                });

                /** Здесь все слои -----------------------------------------------------------------------------------*/

                let map = new ol.Map({
                    target: 'map',
                    layers: [
                        new ol.layer.Tile({
                            source: new ol.source.OSM(),
                            name: 'map'
                        }),
                        new ol.layer.Vector({
                            source: vectorSource,
                            name: 'Road'
                        }),
                        new ol.layer.Vector({
                            source: iconSource,
                            name: 'imgStations'
                        }),
                        new ol.layer.Vector({
                            source: labelSource,
                            name: 'labelStations'
                        }),
/*                        new ol.layer.Vector({
                            source: distance,
                            name: 'distance'
                        }),*/
                        new ol.layer.Vector({
                            source: iconBusSource,
                            name: 'iconBusSource'
                        }),
                        clusters
                    ],
                    overlays: [],
                    /**  renderer: 'canvas'---------------------------------------------------------------------------*/

                    view: new ol.View({
                        /** Координаты центра-------------------------------------------------------------------------*/
                        center: ol.proj.fromLonLat(busCoords),
                        zoom: 10,
                        minZoom: 5,
                        maxZoom: 25
                    })
                });

                /**  всплывающее окно---------------------------------------------------------------------------------*/
                let container = document.getElementById("popup");
                let content = document.getElementById("popup-content");
                let popupCloser = document.getElementById("popup-closer");

                let overlay = new ol.Overlay({
                    element: container,
                    autoPan: true
                });

                function handleStopPixelClick(feature, e) {
                    let coordinate = e.coordinate;
                    let name = feature.get('name');
                    let timearrString = feature.get('timearr');
                    let timedepString = feature.get('timesend');
                    let contentHTML = '<p>Остановка: <span style="font-weight: bold;">' + name + '</span></p>';
                    if (timearrString) {
                        contentHTML += '<p>Время прибытия: <span style="color: blue; font-weight: bold">' + timearrString + '</span></p>';
                    } else {
                        contentHTML += '<p>Автобус остановку не совершал в данном пункте</p>';
                    }
                    if (timedepString) {
                        let timearr = timeToMinutes(timearrString);
                        let timedep = timeToMinutes(timedepString);
                        let timestop = timedep - timearr;
                        // return timestop;

                        contentHTML += '<p>Время отправки: <span style="color: green; font-weight: bold">' + timedepString + '</span></p>' +
                            '<p>Время стоянки:<span style="color: red; font-weight: bold">' + timestop + ' минут</span></p>';
                    }
                    content.innerHTML = contentHTML;
                    overlay.setPosition(coordinate);
                }

                function handleBusPixelClick(feature, e) {
                    let coordinate = e.coordinate;
                    let name = feature.get('name');
                    content.innerHTML = '<p>Автобус: <span style="font-weight: bold;">' + name + '</span></p>';

                    overlay.setPosition(coordinate);
                }

                function timeToMinutes(timeString) {
                    const [hours, minutes] = timeString.split(/[\s.:]+/);
                    return parseInt(hours) * 60 + parseInt(minutes);
                }

                map.on('click', function (e) {
                    let pixel = map.getEventPixel(e.originalEvent);
                    map.forEachFeatureAtPixel(pixel, function (feature) {
                        if (feature.get('id').startsWith('bus')) {
                            handleBusPixelClick(feature, e);
                        } else {
                            handleStopPixelClick(feature, e);
                        }
                    });
                    map.addOverlay(overlay);
                });

                popupCloser.addEventListener('click', function () {
                    overlay.setPosition(undefined);
                });
            });
    })


</script>
<body>
<div id="map"></div>
<div id="popup" class="ol-popup">
    <a href="#" id="popup-closer" class="ol-popup-closer"></a>
    <div id="popup-content"></div>
</div>
<div class="loading-wave">
    <div class="loading-bar"></div>
    <div class="loading-bar"></div>
    <div class="loading-bar"></div>
    <div class="loading-bar"></div>
</div>
</body>
</html>
